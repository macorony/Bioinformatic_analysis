setwd("D:/WorkFiles/Computational/Bioinformatic_analysis/scRNA-seq")
library(SingleCellExperiment)
library(scater)
library(scuttle)
library(ensembldb)
library(DropletTestFiles)
# Construct SingleCellExperiment object
mat <- read.delim("D:\WorkFiles\Computational\Data\E-MTAB-5522\counts_Calero_20160113.tsv", header = T, row.names = 1, check.names = F)
# Construct SingleCellExperiment object
mat <- read.delim("D:\\WorkFiles\Computational\Data\E-MTAB-5522\counts_Calero_20160113.tsv", header = T, row.names = 1, check.names = F)
# Construct SingleCellExperiment object
mat <- read.delim("D:\WorkFiles\Computational\Data\E-MTAB-5522\counts_Calero_20160113.tsv", header = T, row.names = 1, check.names = F)
# Construct SingleCellExperiment object
mat <- read.delim("D:/WorkFiles/Computational/Data/E-MTAB-5522/counts_Calero_20160113.tsv", header = T, row.names = 1, check.names = F)
grepl("^ERCC-", rownames(mat), )
grepl("^ERCC-", rownames(mat))
spike.mat <- mat[grepl("^ERCC-", rownames(mat)), ]
mat <- mat[grepl("^ENSMUSG", rownames(mat)),]
mat
mat[, 1]
gene.length <- mat[, 1]
mat <- as.matrix(mat[,-1])
dim(mat)
?SingleCellExperiment
sce <- SingleCellExperiment(assay = list(counts = mat))
assayNames(sce)
assayNames(sce, "counts")
counts(sce)
sce <- scuttle::logNormCounts(sce)
sce
counts_100 <- counts(sce) + 100
assay(sce, "counts_100") <- counts_100
assays(sce)
# keeping the first two assays
assays(sce) <- assays(sce)[1:2]
assays(sce)
# Metadata
coldata <- read.delim("D:/WorkFiles/Computational/Data/E-MTAB-5522/E-MTAB-5522.sdrf.txt", check.names = F)
coldata
coldata[, "Derived Array Data File"]
coldata <- coldata[coldata[, "Derived Array Data File"] == "counts_Calero_20160113.tsv", ]
coldata
coldata <- DataFrame(genotype=coldata[, "Characteristics[genotype]"],
phenotype=coldata[, "Characteristics[phenotype]"],
spike_in=coldata[, "Factor Value[spike-in addition]"],
row.names = coldata[, "Source Name"])
sce <- SingleCellExperiment(assays = list(counts=mat), colData=coldata)
colData(sce)
head(sce$phenotype)
head(sce$Factor.Value.phenotype.)
head(sce$phenotype)
head(sce$Factor.Value.phenotype.)
head(sce$Factor.Value.phenotype)
sce
sce <- scuttle::addPerCellQC(sce)
colData(sce)
rowData(sce)
colData(sce)
rowData(sce)$Length <- gene.length
rowData(sce)
rowRanges(sce)
sce <-scuttle::addPerFeatureQc(sce)
